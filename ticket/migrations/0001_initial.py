# Generated by Django 4.2.1 on 2023-06-17 06:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('doer', models.IntegerField(blank=True, null=True)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('obj_source_id', models.IntegerField(blank=True, null=True)),
                ('obj_source_type', models.CharField(blank=True, max_length=255, null=True)),
                ('voip_id', models.CharField(blank=True, max_length=255, null=True)),
                ('family', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('flag', models.IntegerField()),
                ('files', models.CharField(blank=True, max_length=255, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('star', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketAttachment',
            fields=[
                ('ticket_attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ext', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(max_length=255)),
                ('size', models.FloatField(blank=True, null=True)),
                ('uploader', models.IntegerField()),
                ('upload_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketComentRead',
            fields=[
                ('ticket_coment_read', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('view_dt', models.DateTimeField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_coment_read',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('ticket_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('visiblity', models.CharField(blank=True, db_comment="If visibility equal to visible then comment's show for requester", max_length=7, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketCommentAttachment',
            fields=[
                ('ticket_comment_attachment', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ext', models.CharField(max_length=10)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('upload_dt', models.DateTimeField()),
                ('uploader', models.IntegerField()),
            ],
            options={
                'db_table': 'ticket_comment_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketCustomer',
            fields=[
                ('ticket_customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('co_name', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ticket_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketDoer',
            fields=[
                ('ticket_doer_id', models.AutoField(primary_key=True, serialize=False)),
                ('doer', models.IntegerField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('leave_dt', models.DateTimeField(blank=True, null=True)),
                ('leave_comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_doer',
                'db_table_comment': 'چه افراد دیگری نیز این تیکت نقش دارند\nو چه زمانی خودشان تصمیم گرفته اند از تیکت خارج شوند',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketLog',
            fields=[
                ('ticket_status_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_log',
                'db_table_comment': 'با هر تغییر در وضعیت تیکت یک لاگ از وضعیت و تغییر دهنده وضعیت در جدول فوق ثبت میگردد',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystem',
            fields=[
                ('ticket_system_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('prefix', models.CharField(blank=True, max_length=25, null=True)),
                ('color', models.CharField(blank=True, max_length=25, null=True)),
                ('status', models.CharField(blank=True, max_length=7, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemCategory',
            fields=[
                ('ticket_system_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('chart_id', models.IntegerField(blank=True, null=True)),
                ('assign_to', models.IntegerField(blank=True, null=True)),
                ('approver', models.IntegerField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('send_sms', models.IntegerField()),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemCity',
            fields=[
                ('ticket_system_city', models.AutoField(primary_key=True, serialize=False)),
                ('city_id', models.IntegerField()),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('chart_id', models.IntegerField(blank=True, db_comment='بر اساس چارت سازمانی کدام چارت سازمانی وظیفه پاسخ گویی به تیکت های مربوط به شهر انتخاب شده را دارد', null=True)),
            ],
            options={
                'db_table': 'ticket_system_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemField',
            fields=[
                ('ticket_system_field_id', models.AutoField(primary_key=True, serialize=False)),
                ('groupname', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemPriority',
            fields=[
                ('ticket_system_priority_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ticket_system_priority',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemSource',
            fields=[
                ('ticket_system_source_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('source_type', models.CharField(max_length=100)),
                ('server', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemStatus',
            fields=[
                ('ticket_system_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
                ('need_qc', models.CharField(blank=True, max_length=3, null=True)),
                ('status', models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                'db_table': 'ticket_system_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemTeam',
            fields=[
                ('ticket_system_team_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner', models.IntegerField()),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemTeamMember',
            fields=[
                ('ticket_system_team_member_id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField()),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_system_team_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemType',
            fields=[
                ('ticket_system_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('orderby', models.IntegerField()),
                ('chart_id', models.IntegerField(blank=True, db_comment='چه عنوان شغلی در چارت سازمانی پاسخ دهنده خواهد بود', null=True)),
                ('user_id', models.IntegerField(blank=True, db_comment='چه کاربری به صورت مستقیم پاسخ گو تیکت های وارده به این بخش خواهد بود', null=True)),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'ticket_system_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSystemUser',
            fields=[
                ('ticket_system_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ticket_system_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketTodo',
            fields=[
                ('ticket_todo_id', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'ticket_todo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketViewer',
            fields=[
                ('ticket_viewer_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'ticket_viewer',
                'managed': False,
            },
        ),
    ]
