# Generated by Django 4.2.1 on 2023-07-26 08:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_comment='نوع قرارداد یا خرید است و یا قرار فروش', max_length=4, null=True)),
                ('contract_no', models.CharField(blank=True, max_length=255, null=True)),
                ('start_dt', models.CharField(blank=True, max_length=10, null=True)),
                ('end_dt', models.CharField(blank=True, max_length=10, null=True)),
                ('prepaid_price', models.FloatField(blank=True, null=True)),
                ('prepaid_doc_no', models.FloatField(blank=True, null=True)),
                ('prepaider', models.IntegerField(blank=True, null=True)),
                ('prepaid_dt', models.DateTimeField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('confirmer', models.IntegerField(blank=True, null=True)),
                ('signer', models.IntegerField(blank=True, null=True)),
                ('sign_dt', models.DateTimeField(blank=True, null=True)),
                ('sign_description', models.TextField(blank=True, null=True)),
                ('stop_dt', models.DateTimeField(blank=True, null=True)),
                ('stoper', models.IntegerField(blank=True, null=True)),
                ('stop_description', models.TextField(blank=True, null=True)),
                ('contract_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractCast',
            fields=[
                ('contract_cast_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_dt', models.DateField(blank=True, null=True)),
                ('end_dt', models.DateField(blank=True, null=True)),
                ('law_paper', models.IntegerField(blank=True, null=True)),
                ('cast_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_cast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractCity',
            fields=[
                ('contract_city_id', models.AutoField(primary_key=True, serialize=False)),
                ('obj_item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractDiscount',
            fields=[
                ('contract_discount_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('percent_price', models.IntegerField(blank=True, null=True)),
                ('fixed_price', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_discount',
                'db_table_comment': 'تخفیفاتی که به صورت بازه ای شامل حال فروشنده خواهد شد',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractItem',
            fields=[
                ('contract_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('unit_price', models.FloatField(blank=True, null=True)),
                ('wage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_item',
                'db_table_comment': 'چه چیزی با چه نسخه ای (درصورت نیاز) با چه مشخصات مبلغی که در قرارداد ذکر شده است قرار است\nخریدش انجام شود و یا ارسالش انجام شود',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractItemBom',
            fields=[
                ('contract_item_bom_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('drop_amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_item_bom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractItemOrgan',
            fields=[
                ('contract_item_organ_id', models.AutoField(primary_key=True, serialize=False)),
                ('obj_item_id', models.IntegerField(blank=True, null=True)),
                ('percent_amount', models.IntegerField(blank=True, null=True)),
                ('fixed_amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_item_organ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractItemTiming',
            fields=[
                ('contract_item_timing_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('start_dt', models.DateTimeField(blank=True, null=True)),
                ('end_dt', models.DateTimeField(blank=True, null=True)),
                ('stop_dt', models.DateTimeField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
                ('stop_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_item_timing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSubSVA',
            fields=[
                ('obj_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('mobile', models.CharField(max_length=20, null=True)),
                ('reagent', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('idno', models.CharField(max_length=20, null=True)),
                ('codemeli', models.CharField(max_length=20, null=True)),
                ('province_id', models.IntegerField(null=True)),
                ('city_id', models.IntegerField(null=True)),
                ('seller_buyer_id', models.IntegerField(null=True)),
                ('sex_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'customer_sub_sva',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerSva',
            fields=[
                ('obj_item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=255, null=True)),
                ('mobile', models.CharField(max_length=255, null=True)),
                ('reagent', models.CharField(max_length=255, null=True)),
                ('province_id', models.CharField(max_length=255, null=True)),
                ('city_id', models.CharField(max_length=255, null=True)),
                ('address', models.CharField(max_length=255, null=True)),
                ('idno', models.CharField(max_length=255, null=True)),
                ('codemeli', models.CharField(max_length=255, null=True)),
                ('seller_buyer_id', models.CharField(max_length=255, null=True)),
                ('sex_id', models.CharField(max_length=255, null=True)),
                ('sex_title', models.CharField(max_length=255, null=True)),
                ('brand_id', models.IntegerField(null=True)),
                ('brand_name', models.CharField(max_length=255, null=True)),
                ('brand_phone', models.CharField(max_length=255, null=True)),
                ('brand_slung', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'customer_sva',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepoConfilict',
            fields=[
                ('depo_confilict_id', models.AutoField(primary_key=True, serialize=False)),
                ('depo_id', models.IntegerField()),
                ('goods', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'depo_confilict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepoInit',
            fields=[
                ('depo_init_id', models.AutoField(primary_key=True, serialize=False)),
                ('init_type', models.CharField(max_length=13)),
                ('in_amount', models.IntegerField(blank=True, null=True)),
                ('out_amount', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('unit_price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'depo_init',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepoSend',
            fields=[
                ('depo_send_id', models.AutoField(primary_key=True, serialize=False)),
                ('source_type', models.CharField(blank=True, db_comment='FACTORE', max_length=6, null=True)),
                ('source_id', models.IntegerField(blank=True, db_comment='factor_item_id,', null=True)),
                ('goods', models.IntegerField(blank=True, null=True)),
                ('depo_id', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('send_status', models.CharField(blank=True, max_length=7, null=True)),
                ('send_desc', models.TextField(blank=True, null=True)),
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'depo_send',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepoToDepo',
            fields=[
                ('depo_to_depo_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('confirmer', models.IntegerField(blank=True, null=True)),
                ('confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('sender_id', models.IntegerField(blank=True, null=True)),
                ('sender_dt', models.DateTimeField(blank=True, null=True)),
                ('sender_desc', models.TextField(blank=True, null=True)),
                ('receiver_id', models.IntegerField(blank=True, null=True)),
                ('receiver_dt', models.DateTimeField(blank=True, null=True)),
                ('receiver_desc', models.TextField(blank=True, null=True)),
                ('canceler', models.IntegerField(blank=True, null=True)),
                ('cancel_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'depo_to_depo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepoToDepoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_src', models.FloatField()),
                ('amount_dst', models.FloatField(blank=True, null=True)),
                ('reg_src', models.IntegerField()),
                ('reg_src_dt', models.DateTimeField()),
                ('reg_dst', models.IntegerField(blank=True, null=True)),
                ('reg_dst_dt', models.DateTimeField(blank=True, null=True)),
                ('depo_src', models.IntegerField()),
                ('depo_dst', models.IntegerField()),
            ],
            options={
                'db_table': 'depo_to_depo_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocItem',
            fields=[
                ('doc_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('doc_id', models.IntegerField()),
                ('kol', models.IntegerField()),
                ('moeen', models.IntegerField()),
                ('tafsily', models.IntegerField()),
                ('joz1', models.IntegerField()),
                ('joz2', models.IntegerField()),
                ('joz3', models.IntegerField()),
                ('joz4', models.IntegerField()),
                ('description', models.IntegerField()),
                ('debit', models.IntegerField()),
                ('credit', models.IntegerField()),
            ],
            options={
                'db_table': 'doc_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factor',
            fields=[
                ('factor_id', models.AutoField(primary_key=True, serialize=False)),
                ('factore_desc', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('reg_status', models.CharField(blank=True, max_length=7, null=True)),
                ('seller_factor_id', models.BigIntegerField(blank=True, db_comment='شماره فاکتور مشتری است\nکه تابع زیر عدد فوق را بر اساس کد فروشنده تولید خواهد کرد\ngetNextCustomSeq', null=True)),
                ('confirmer', models.IntegerField(blank=True, null=True)),
                ('confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('depo_id', models.IntegerField(blank=True, null=True)),
                ('sale_confirmer', models.IntegerField(blank=True, null=True)),
                ('sale_confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('acc_confirmer', models.IntegerField(blank=True, null=True)),
                ('acc_confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('acc_status', models.IntegerField(blank=True, null=True)),
                ('acc_description', models.CharField(blank=True, max_length=255, null=True)),
                ('receipt_doc_printer_id', models.PositiveIntegerField(blank=True, null=True)),
                ('receipt_doc_print_dt', models.DateTimeField(blank=True, null=True)),
                ('sale_confirm_status', models.IntegerField(blank=True, null=True)),
                ('city_id', models.IntegerField(blank=True, db_comment='شهر تحویل گیرنده فاکتور فوق\nدرصورتی که خریداری بار را برای آدرس دیگری خریداری کرده باشد', null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'factor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorAddress',
            fields=[
                ('factor_address_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'factor_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorComment',
            fields=[
                ('factor_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('factor_id', models.IntegerField()),
                ('level', models.CharField(max_length=7)),
                ('body', models.TextField()),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'factor_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorDocument',
            fields=[
                ('factor_document_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_type', models.CharField(max_length=7)),
                ('document_type', models.CharField(max_length=8)),
                ('uri', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('hash', models.CharField(blank=True, max_length=256, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'factor_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorItem',
            fields=[
                ('factor_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('unit_price', models.FloatField()),
                ('price', models.FloatField(blank=True, null=True)),
                ('discount_percent', models.FloatField(blank=True, null=True)),
                ('discount_price', models.FloatField()),
                ('related_factor_item_id', models.IntegerField(blank=True, null=True)),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('document_delivery_id', models.IntegerField(blank=True, null=True)),
                ('document_delivery_dt', models.DateTimeField(blank=True, null=True)),
                ('document_recieve_id', models.IntegerField(blank=True, null=True)),
                ('document_recieve_dt', models.DateTimeField(blank=True, null=True)),
                ('depo_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'factor_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorItemOrgan',
            fields=[
                ('factor_item_organ_id', models.AutoField(primary_key=True, serialize=False)),
                ('percent_rate', models.FloatField(blank=True, null=True)),
                ('fixed_rate', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'factor_item_organ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactorPayway',
            fields=[
                ('factor_payway_id', models.AutoField(primary_key=True, serialize=False)),
                ('pay_level', models.CharField(max_length=7)),
                ('pay_type', models.CharField(max_length=9)),
                ('price', models.FloatField()),
                ('cheque_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('no', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
                ('receipe_id', models.IntegerField(blank=True, null=True)),
                ('receip_dt', models.DateTimeField(blank=True, null=True)),
                ('receive_doc_id', models.IntegerField(blank=True, db_comment='چه کسی از شرکت چک را تحویل گرفته است', null=True)),
                ('receieve_doc_dt', models.DateTimeField(blank=True, db_comment='در چه تاریخی چک را تایید تحویل مامور شده', null=True)),
                ('receieve_doc_description', models.TextField(blank=True, null=True)),
                ('receive_acc_id', models.IntegerField(blank=True, db_comment='چه کسی در واحد مالی دریافت چک را تایید کرده است', null=True)),
                ('receive_acc_dt', models.DateTimeField(blank=True, db_comment='در چه تاریخی واحد مالی دریافت چک را تایید کرده است', null=True)),
                ('receive_acc_description', models.TextField(blank=True, null=True)),
                ('receive_doc_no', models.CharField(blank=True, db_comment='شماره سندی چک ثبت سیستم شده است', max_length=255, null=True)),
            ],
            options={
                'db_table': 'factor_payway',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('inquiry_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_control', models.IntegerField()),
                ('bank_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('account_owner_nat_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_no', models.CharField(blank=True, max_length=255, null=True)),
                ('account_sayadi', models.CharField(blank=True, max_length=255, null=True)),
                ('account_shaba', models.CharField(blank=True, max_length=255, null=True)),
                ('cheque_image', models.TextField(blank=True, null=True)),
                ('cheque_price', models.FloatField(blank=True, null=True)),
                ('cheque_count', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('sms_inquiry', models.IntegerField(blank=True, null=True)),
                ('direct_minquiry', models.IntegerField(blank=True, null=True)),
                ('confir_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('confirmer', models.IntegerField(blank=True, null=True)),
                ('confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('confirm_status', models.CharField(blank=True, max_length=12, null=True)),
                ('shower', models.IntegerField(blank=True, null=True)),
                ('show_dt', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(blank=True, db_comment='در مرحله آخر تصمیم گرفته میشود نصب به استعلام فوق فاکتور صادر شود و یا نشود\nو آیتم فوق نشان میدهد که \nshower\nفوق چه تصمیمی گرفته است', max_length=6, null=True)),
                ('actioner', models.IntegerField(blank=True, null=True)),
                ('action_dt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inquiry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obj',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjItem',
            fields=[
                ('obj_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjItemSpec',
            fields=[
                ('obj_item_spec_id', models.AutoField(primary_key=True, serialize=False)),
                ('val', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj_item_spec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjItemSVA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('obj_type_id', models.IntegerField()),
                ('obj_id', models.IntegerField()),
                ('obj_item_id', models.IntegerField()),
                ('obj_type_name', models.CharField(max_length=255)),
                ('obj_type_title', models.CharField(max_length=255)),
                ('obj_name', models.CharField(max_length=255)),
                ('obj_title', models.CharField(max_length=255)),
                ('obj_item_name', models.CharField(max_length=255)),
                ('obj_item_title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'obj_item_sva',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjPayment',
            fields=[
                ('obj_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('obj_item_id', models.IntegerField()),
                ('type', models.CharField(max_length=9)),
                ('source_type', models.CharField(max_length=255)),
                ('source_id', models.IntegerField()),
                ('bank_id', models.IntegerField(blank=True, null=True)),
                ('no', models.CharField(blank=True, max_length=255, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=255, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
                ('register', models.IntegerField()),
                ('reg_dt', models.DateTimeField()),
                ('confirmer', models.IntegerField(blank=True, null=True)),
                ('confirm_dt', models.DateTimeField(blank=True, null=True)),
                ('confirm_status', models.CharField(blank=True, max_length=7, null=True)),
                ('confirm_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('receip_id', models.IntegerField(blank=True, null=True)),
                ('receip_dt', models.DateTimeField(blank=True, null=True)),
                ('receive_doc_id', models.IntegerField(blank=True, null=True)),
                ('receive_doc_dt', models.DateTimeField(blank=True, null=True)),
                ('receive_doc_description', models.TextField(blank=True, null=True)),
                ('receive_acc_id', models.IntegerField(blank=True, null=True)),
                ('receive_acc_dt', models.DateTimeField(blank=True, null=True)),
                ('receive_acc_desc', models.TextField(blank=True, null=True)),
                ('doc_register_id', models.IntegerField(blank=True, null=True)),
                ('doc_register_dt', models.DateTimeField(blank=True, null=True)),
                ('doc_no', models.IntegerField(blank=True, null=True)),
                ('roc_register_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjSend',
            fields=[
                ('obj_send_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=7)),
                ('source_type', models.CharField(blank=True, max_length=6, null=True)),
                ('source_id', models.IntegerField()),
                ('print_id', models.IntegerField(blank=True, null=True)),
                ('print_dt', models.DateTimeField(blank=True, null=True)),
                ('print_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('drive_id', models.IntegerField(blank=True, null=True)),
                ('doer2_id', models.IntegerField(blank=True, null=True)),
                ('doer1_id', models.IntegerField(blank=True, null=True)),
                ('drive_dt', models.DateTimeField(blank=True, null=True)),
                ('drive_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('drive_status', models.CharField(blank=True, max_length=7, null=True)),
                ('drive_status_id', models.IntegerField(blank=True, null=True)),
                ('drive_status_dt', models.DateTimeField(blank=True, null=True)),
                ('drive_status_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('drive_register', models.IntegerField(blank=True, null=True)),
                ('assesmenter', models.IntegerField(blank=True, null=True)),
                ('assesment_dt', models.DateTimeField(blank=True, null=True)),
                ('assesment_desc', models.TextField(blank=True, null=True)),
                ('assesment_opinion', models.IntegerField(blank=True, null=True)),
                ('docer', models.IntegerField(blank=True, null=True)),
                ('doc_dt', models.DateTimeField(blank=True, null=True)),
                ('doc_desc', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('assesmenter_shop', models.IntegerField(blank=True, null=True)),
                ('assesmenter_shop_dt', models.DateTimeField(blank=True, null=True)),
                ('assesment_seller', models.IntegerField(blank=True, null=True)),
                ('assesment_shopper_desc', models.TextField(blank=True, null=True)),
                ('assesment_shop', models.IntegerField(blank=True, null=True)),
                ('assesment_drive_time', models.IntegerField(blank=True, null=True)),
                ('assesmenter_service', models.IntegerField(blank=True, null=True)),
                ('assesmenter_service_dt', models.DateTimeField(blank=True, null=True)),
                ('assesment_servic_action', models.IntegerField(blank=True, null=True)),
                ('assesment_service_dress', models.IntegerField(blank=True, null=True)),
                ('assesment_service_status', models.IntegerField(blank=True, null=True)),
                ('shop_desc', models.TextField(blank=True, null=True)),
                ('isntall_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj_send',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjSendSerial',
            fields=[
                ('obj_send_serial_id', models.AutoField(primary_key=True, serialize=False)),
                ('obj_send_id', models.IntegerField(blank=True, null=True)),
                ('factor_id', models.IntegerField()),
                ('product_id', models.IntegerField()),
                ('serial_drive', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'obj_send_serial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjSpec',
            fields=[
                ('obj_spec_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('data_type', models.CharField(blank=True, max_length=100, null=True)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('requirement', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('min_len', models.IntegerField(blank=True, null=True)),
                ('max_len', models.IntegerField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'obj_spec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjType',
            fields=[
                ('obj_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('has_bom', models.IntegerField(blank=True, null=True)),
                ('child_length', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obj_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjTypeSpec',
            fields=[
                ('obj_type_spec_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('data_type', models.CharField(blank=True, max_length=100, null=True)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('requirement', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('min_len', models.IntegerField(blank=True, null=True)),
                ('max_len', models.IntegerField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'obj_type_spec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreFactor',
            fields=[
                ('pre_factor_id', models.AutoField(primary_key=True, serialize=False)),
                ('buyer_id', models.IntegerField(blank=True, null=True)),
                ('obj_item_id', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('unit_price', models.IntegerField(blank=True, null=True)),
                ('register', models.IntegerField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pre_factor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAdditional',
            fields=[
                ('product_additional_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, db_comment='تعدادی که از کالای فوق باید به صورت خودکار به فاکتور افزوده شود', null=True)),
                ('unit_price_rate', models.FloatField(blank=True, null=True)),
                ('unit_price_fixed', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_additional',
                'db_table_comment': 'کالاهایی می باشد که به صورت خودکار به فاکتور افزوده خواهند شد\nیعنی با افزودن کالا به فاکتور به صورت خودذکار کالاهای فوق نیز به فاکتور افزوده خواهند شد',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('product_discount_id', models.AutoField(primary_key=True, serialize=False)),
                ('percent_rate', models.FloatField(blank=True, null=True)),
                ('fixed_rate', models.FloatField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, db_comment='تا تعداد فوق درصد تخفیفی که داده میشود', null=True)),
                ('discount_type', models.CharField(blank=True, max_length=4, null=True)),
                ('fixed_amount', models.IntegerField(blank=True, db_comment='در صورت رسیدن به تعداد مورد نظر به تعداد کالا با ضریب مشخص شده مبلغ افزوده شود', null=True)),
            ],
            options={
                'db_table': 'product_discount',
                'db_table_comment': 'تخفیفاتی که برای محصول در نظر گرفته شده است',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('production_id', models.IntegerField(primary_key=True, serialize=False)),
                ('dt', models.DateTimeField()),
                ('pdt', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('reg_dt', models.DateTimeField()),
                ('register', models.IntegerField()),
                ('confimer_dt', models.DateTimeField(blank=True, null=True)),
                ('confirmer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'production',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopCustomerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obj_item_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'shop_customer_count',
                'managed': False,
            },
        ),
    ]
